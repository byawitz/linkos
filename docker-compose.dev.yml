version: '3.8'

x-logging: &x-logging
  logging:
    driver: 'json-file'
    options:
      max-file: '5'
      max-size: '10m'


services:
  traefik:
    image: traefik:2.11
    container_name: traefik
    hostname: traefik
    <<: *x-logging
    command:
      - "--api.insecure=true"
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`,`linkos`)
      - --entrypoints.linkos_web.address=:80
    restart: unless-stopped
    ports:
      - "8081:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - linkos

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    hostname: clickhouse
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    ports:
      - '8123:8123'
      - '9000:9000'
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT
    volumes:
      - clickhouse:/var/lib/clickhouse

  postgres:
    image: postgres:15.2
    container_name: postgres
    hostname: postgres
    <<: *x-logging
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD:
      POSTGRES_USER:
      POSTGRES_DB:
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    networks:
      - linkos

  redis:
    image: redis:7.2.4-bookworm
    container_name: redis
    hostname: redis
    <<: *x-logging
    restart: unless-stopped
    ports:
      - 6379:6379
    command: >
      redis-server 
      --save 3600 1 300 100 60 1000 
      --loglevel warning
      --maxmemory            1g
      --maxmemory-policy     allkeys-lru
      --maxmemory-samples    5
    networks:
      - linkos
    volumes:
      - redis:/data

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    hostname: kafka
    <<: *x-logging
    restart: unless-stopped
    ports:
      - "9092:9092"
    networks:
      - linkos
    volumes:
      - kafka:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID
      - KAFKA_CFG_PROCESS_ROLES
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
      - KAFKA_CFG_LISTENERS
      - KAFKA_CFG_ADVERTISED_LISTENERS
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME

  linkos:
    image: linkos/linkos
    hostname: linkos
    container_name: linkos
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    <<: *x-logging
    networks:
      - linkos
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=linkos
      - traefik.docker.network=linkos
      - traefik.http.services.linkos.loadbalancer.server.port=3000
      - traefik.http.routers.linkos_api_http.rule=PathPrefix(`/v1/api`) || PathPrefix(`/dashboard`)
      - traefik.http.routers.linkos_api_http.entrypoints=linkos_web
      - traefik.http.routers.linkos_api_http.service=linkos
    volumes:
      - ./apps/:/usr/server/app/src
    entrypoint: serve-watch
    environment:
      - ENVIRONMENT
      - TOKEN_DRIVER
      - APP_SSL_KEY
      - API_ENDPOINT
      - REDIS_HOST
      - REDIS_PORT
      - KAFKA_HOSTS
      - CLICKHOUSE_PROTOCOL
      - CLICKHOUSE_HOST
      - CLICKHOUSE_PORT
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - NANOID_LETTERS
      - NANOID_LENGTH

  linkos-links:
    image: linkos/linkos
    hostname: linkos-links
    container_name: linkos-links
    restart: unless-stopped
    <<: *x-logging
    networks:
      - linkos
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=linkos
      - traefik.docker.network=linkos
      - traefik.http.services.linkos-links.loadbalancer.server.port=3000
      - traefik.http.routers.linkos_links_http.rule=PathPrefix(`/`)
      - traefik.http.routers.linkos_links_http.entrypoints=linkos_web
      - traefik.http.routers.linkos_links_http.service=linkos-links
    volumes:
      - ./apps/:/usr/server/app/src
    entrypoint: serve-links-watch
    environment:
      - ENVIRONMENT
      - TOKEN_DRIVER
      - APP_SSL_KEY
      - API_ENDPOINT
      - REDIS_HOST
      - REDIS_PORT
      - KAFKA_HOSTS
      - CLICKHOUSE_PROTOCOL
      - CLICKHOUSE_HOST
      - CLICKHOUSE_PORT
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD


  linkos-analytics-consumer:
    image: linkos/linkos
    hostname: linkos-analytics-consumer
    container_name: linkos-analytics-consumer
    restart: unless-stopped
    <<: *x-logging
    volumes:
      - ./apps/:/usr/server/app/src
    entrypoint: analytics-watch
    networks:
      - linkos
    depends_on:
      - kafka
    environment:
      - ENVIRONMENT
      - TOKEN_DRIVER
      - APP_SSL_KEY
      - API_ENDPOINT
      - REDIS_HOST
      - REDIS_PORT
      - KAFKA_HOSTS
      - CLICKHOUSE_PROTOCOL
      - CLICKHOUSE_HOST
      - CLICKHOUSE_PORT
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  linkos-webhooks-consumer:
    image: linkos/linkos
    hostname: linkos-webhooks-consumer
    container_name: linkos-webhooks-consumer
    restart: unless-stopped
    <<: *x-logging
    volumes:
      - ./apps/:/usr/server/app/src
    entrypoint: webhooks-watch
    networks:
      - linkos
    depends_on:
      - kafka
    environment:
      - ENVIRONMENT
      - TOKEN_DRIVER
      - APP_SSL_KEY
      - API_ENDPOINT
      - REDIS_HOST
      - REDIS_PORT
      - KAFKA_HOSTS
      - CLICKHOUSE_PROTOCOL
      - CLICKHOUSE_HOST
      - CLICKHOUSE_PORT
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD


  linkos-scheduler:
    image: linkos/linkos
    hostname: linkos-scheduler
    container_name: linkos-scheduler
    restart: unless-stopped
    <<: *x-logging
    volumes:
      - ./apps/:/usr/server/app/src
    entrypoint: scheduler-watch
    networks:
      - linkos
    depends_on:
      - kafka
    environment:
      - ENVIRONMENT
      - TOKEN_DRIVER
      - APP_SSL_KEY
      - API_ENDPOINT
      - REDIS_HOST
      - REDIS_PORT
      - KAFKA_HOSTS
      - CLICKHOUSE_PROTOCOL
      - CLICKHOUSE_HOST
      - CLICKHOUSE_PORT
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - BACKUP_CRON


networks:
  linkos:
    name: linkos

volumes:
  redis:
  postgres:
  clickhouse:
  kafka: