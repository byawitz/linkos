version: '3.8'

x-logging: &x-logging
  logging:
    driver: 'json-file'
    options:
      max-file: '5'
      max-size: '10m'


services:
  traefik:
    image: traefik:2.9
    container_name: traefik
    hostname: traefik
    <<: *x-logging
    command:
      - "--api.insecure=true"
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`,`linkos`)
      - --entrypoints.linkos_web.address=:80
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - linkos

  postgres:
    container_name: postgres
    hostname: postgres
    <<: *x-logging
    image: postgres:15.2
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${_POSTGRES_PASSWORD}
      POSTGRES_USER: ${_POSTGRES_USER}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    networks:
      - linkos

  redis:
    image: redis:7.2.4-bookworm
    container_name: redis
    hostname: redis
    <<: *x-logging
    restart: unless-stopped
    ports:
      - 6379:6379
    command: >
      redis-server 
      --save 3600 1 300 100 60 1000 
      --loglevel warning
      --maxmemory            1g
      --maxmemory-policy     allkeys-lru
      --maxmemory-samples    5
    networks:
      - linkos
    volumes:
      - redis:/data

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    hostname: kafka
    <<: *x-logging
    restart: unless-stopped
    ports:
      - "9092:9092"
    networks:
      - linkos
    volumes:
      - kafka:/bitnami
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    hostname: clickhouse
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    ports:
      - '8123:8123'
      - '9000:9000'
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - clickhouse:/var/lib/clickhouse

  linkos:
    image: oven/bun:1.0.28
    container_name: linkos
    hostname: linkos
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=linkos
      - traefik.docker.network=linkos
      - traefik.http.services.linkos.loadbalancer.server.port=3000
      - traefik.http.routers.linkos_api_http.rule=PathPrefix(`/`)
      - traefik.http.routers.linkos_api_http.entrypoints=linkos_web
      - traefik.http.routers.linkos_api_http.service=linkos
    volumes:
      - ./apps/linkos/:/app
    entrypoint: bun
    command: --watch "/app/src/index.ts" --serve
    environment:
      - ENV

networks:
  linkos:
    name: linkos

volumes:
  redis:
  postgres:
  clickhouse:
  kafka: