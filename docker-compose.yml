version: '3.8'

x-logging: &x-logging
  logging:
    driver: 'json-file'
    options:
      max-file: '5'
      max-size: '10m'

services:
  traefik:
    image: traefik:2.9
    container_name: traefik
    hostname: traefik
    <<: *x-logging
    command:
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`,`linkos`)
      - --entrypoints.linkos_web.address=:80
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - linkos

  linkos:
    image: linkos/api
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: linkos
    hostname: linkos
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=linkos
      - traefik.docker.network=linkos
      - traefik.http.services.linkos.loadbalancer.server.port=3000
      - traefik.http.routers.linkos_api_http.rule=PathPrefix(`/`)
      - traefik.http.routers.linkos_api_http.entrypoints=linkos_web
      - traefik.http.routers.linkos_api_http.service=linkos
    environment:
      - ENV

  linkos-kafka:
    image: linkos/api
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    container_name: linkos-kafka
    hostname: linkos-kafka
    <<: *x-logging
    restart: unless-stopped
    entrypoint: [ "bun", "index.ts","--kafka" ]
    networks:
      - linkos
    environment:
      - ENV

  dashboard:
    image: linkos/dashboard
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    container_name: dashboard
    hostname: dashboard
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=linkos
      - traefik.docker.network=linkos
      - traefik.http.services.dashboard.loadbalancer.server.port=80
      - traefik.http.routers.dashboard_http.entrypoints=linkos_web
      - traefik.http.routers.dashboard_http.rule=PathPrefix(`/dashboard`)
      - traefik.http.routers.dashboard_http.service=dashboard
    environment:
      - ENV



  redis:
    image: redis:7.2.4-bookworm
    container_name: redis
    hostname: redis
    <<: *x-logging
    restart: unless-stopped
    command: >
      redis-server 
      --save 3600 1 300 100 60 1000 
      --loglevel warning
      --maxmemory            1g
      --maxmemory-policy     allkeys-lru
      --maxmemory-samples    5
    networks:
      - linkos
    volumes:
      - redis:/data

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    hostname: kafka
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    volumes:
      - kafka:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID
      - KAFKA_CFG_PROCESS_ROLES
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
      - KAFKA_CFG_LISTENERS
      - KAFKA_CFG_ADVERTISED_LISTENERS
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    hostname: clickhouse
    <<: *x-logging
    restart: unless-stopped
    networks:
      - linkos
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_DB
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
    volumes:
      - clickhouse:/var/lib/clickhouse

networks:
  linkos:
    name: linkos

volumes:
  redis:
  postgres:
  clickhouse:
  kafka: